package com.theforum.entities;
// Generated Feb 18, 2018 12:44:44 PM by Hibernate Tools 4.3.1.Final

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Lob;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;

import com.theforum.util.DateUtils;
import com.theforum.util.Role;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "myforumweb")
public class Users implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	private long userId;
	
	@Column(name = "user_from")
	private String userFrom;
	
	@Column(name = "deleted")
	private Boolean deleted;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "user_lastvisit", length = 19)
	private Date userLastvisit;
	
	@Column(name = "user_password")
	private String userPassword;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "user_regdate", length = 19)
	private Date userRegdate;
	
	@Enumerated(EnumType.ORDINAL)
	@Column(name = "user_role")
	private Role userRole;//0- Admin, 1- User // later with ENUM
	
	@Column(name = "username")
	private String username;
	
	@Column(name = "user_first_name")
	private String userFirstName;
	
	@Column(name = "user_second_name")
	private String userSecondName;
	
	@Column(name = "avator")
	@Lob
	private String avator;
	
	@Column(name = "user_comment_number")
	private int userCommentNumber;
		

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "usersByUsermsgsToUserid")
	@Fetch (FetchMode.SELECT)
	private List<UserMessages> userMessgesesForUsermsgsToUserid = new ArrayList<UserMessages>(0);
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "users")
	private List<Topics> topicses = new ArrayList<Topics>(0);
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "usersByUsermsgsFromUserid")
	@Fetch (FetchMode.SELECT)
	private List<UserMessages> userMessgesesForUsermsgsFromUserid = new ArrayList<UserMessages>(0);
	
	@OneToMany(fetch = FetchType.EAGER, mappedBy = "users")
	private List<Posts> postses = new ArrayList<Posts>(0);
	

	public Users() {
		this.deleted=false;
		setUserRegdate(DateUtils.parseDate(LocalDate.now().toString()));
		setUserLastvisit(DateUtils.parseDate(LocalDate.now().toString()));

	}

	public Users(long userId) {
		this.userId = userId;	
	}

	public Users(long userId, String userFrom, Boolean deleted, Date userLastvisit,
			String userPassword, Date userRegdate, Role userRole, String username,String userFirstName,String userSecondName,
			List<UserMessages> userMessgesesForUsermsgsToUserid, List<Topics> topicses,
			List<UserMessages> userMessgesesForUsermsgsFromUserid, List<Posts> postses) {
		this.userId = userId;
		this.userFrom = userFrom;
		this.deleted = deleted;
		this.userLastvisit = userLastvisit;
		this.userPassword = userPassword;
		this.userRegdate = userRegdate;
		this.userRole = userRole;
		this.username = username;
		this.userFirstName= userFirstName;
		this.userSecondName= userSecondName;
		this.userMessgesesForUsermsgsToUserid = userMessgesesForUsermsgsToUserid;
		this.topicses = topicses;
		this.userMessgesesForUsermsgsFromUserid = userMessgesesForUsermsgsFromUserid;
		this.postses = postses;
	}

	

	public long getUserId() {
		return this.userId;
	}

	public void setUserId(long userId) {
		this.userId = userId;
	}


	public String getUserFrom() {
		return this.userFrom;
	}

	public void setUserFrom(String userFrom) {
		this.userFrom = userFrom;
	}


	public Boolean getDeleted() {
		return this.deleted;
	}

	public void setDeleted(Boolean deleted) {
		this.deleted = deleted;
	}


	public Date getUserLastvisit() {
		return this.userLastvisit;
	}

	public void setUserLastvisit(Date userLastvisit) {
		this.userLastvisit = userLastvisit;
	}


	public String getUserPassword() {
		return this.userPassword;
	}

	public void setUserPassword(String userPassword) {
		this.userPassword = userPassword;
	}


	public Date getUserRegdate() {
		return this.userRegdate;
	}

	public void setUserRegdate(Date userRegdate) {
		this.userRegdate = userRegdate;
	}


	public Role getUserRole() {	
		return this.userRole;
	}

	public void setUserRole(Role userRole) {
		this.userRole = userRole;
	}


	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}


	public String getUserFirstName() {
		return this.userFirstName;
	}

	public void setUserFirstName(String userFirstName) {
		this.userFirstName = userFirstName;
	}


	public String getUserSecondName() {
		return this.userSecondName;
	}

	public void setUserSecondName(String userSecondName) {
		this.userSecondName = userSecondName;
	}
	
	
	public List<UserMessages> getUserMessgesesForUsermsgsToUserid() {
		return this.userMessgesesForUsermsgsToUserid;
	}

	public void setUserMessgesesForUsermsgsToUserid(List<UserMessages> userMessgesesForUsermsgsToUserid) {
		this.userMessgesesForUsermsgsToUserid = userMessgesesForUsermsgsToUserid;
	}

	
	public List<Topics> getTopicses() {
		return this.topicses;
	}

	public void setTopicses(List<Topics> topicses) {
		this.topicses = topicses;
	}

	
	public List<UserMessages> getUserMessgesesForUsermsgsFromUserid() {
		return this.userMessgesesForUsermsgsFromUserid;
	}

	public void setUserMessgesesForUsermsgsFromUserid(List<UserMessages> userMessgesesForUsermsgsFromUserid) {
		this.userMessgesesForUsermsgsFromUserid = userMessgesesForUsermsgsFromUserid;
	}


	public List<Posts> getPostses() {
		return this.postses;
	}

	public void setPostses(List<Posts> postses) {
		this.postses = postses;
	}
	public String getAvator() {
		return avator;
	}

	public void setAvator(String avator) {
		this.avator = avator;
	}

	public int getUserCommentNumber() {
		return userCommentNumber;
	}

	public void setUserCommentNumber(int userCommentNumber) {
		this.userCommentNumber = userCommentNumber;
	}
	

}
